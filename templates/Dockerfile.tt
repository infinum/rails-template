ARG RUBY_VERSION=<%= RUBY_VERSION %>
FROM ruby:$RUBY_VERSION-slim-trixie@sha256:0d2adfa1930d67ee79e5d16c3610f4fbed43c98e98dbda14c2811b8197211c74 AS base
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
    libpq-dev \
    libjemalloc2 \
    libyaml-dev \
  && apt-get clean \
  && ln -s /usr/lib/$(uname -m)-linux-gnu/libjemalloc.so.2 /usr/local/lib/libjemalloc.so \
  && rm -rf /var/cache/apt/archives /var/lib/apt/lists /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

ENV BUNDLE_PATH="/usr/local/bundle" \
  BUNDLE_RETRY=3 \
  LANG=C.UTF-8 \
  LD_PRELOAD=/usr/local/lib/libjemalloc.so

RUN groupadd --gid 1001 deploy \
  && useradd --uid 1001 --gid deploy --shell /bin/bash --create-home deploy

RUN mkdir /app && chown -R deploy:deploy /app

WORKDIR /app

FROM base AS builder
RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
    build-essential \
    git \
    curl \
    unzip \
  && apt-get clean \
  && rm -rf /var/cache/apt/archives /var/lib/apt/lists /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log<% if uses_node? %>

ARG NODE_VERSION=<%= node_version %>
RUN git clone https://github.com/nodenv/node-build.git /tmp/node-build \
  && /tmp/node-build/install.sh \
  && rm -rf /tmp/node-build \
  && node-build $NODE_VERSION /usr/local<% end %>

RUN curl https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip -o /tmp/awscliv2.zip \
  && unzip /tmp/awscliv2.zip -d /tmp \
  && /tmp/aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update \
  && rm -rf /tmp/aws /tmp/awscliv2.zip

FROM builder AS dev
COPY --chown=deploy:deploy Gemfile* /app/
RUN bundle install

FROM builder AS ci
COPY --chown=deploy:deploy infra/ci/bundle.config ${BUNDLE_PATH}/config
COPY --chown=deploy:deploy Gemfile* /app/
RUN bundle install && \
    rm -rf ~/.bundle/ ${BUNDLE_PATH}/ruby/*/cache ${BUNDLE_PATH}/ruby/*/bundler/gems/*/.git<% if uses_bootsnap? %> && \
    bundle exec bootsnap precompile --gemfile<% end %>
COPY --chown=deploy:deploy . /app

FROM builder AS deploy-base
COPY --chown=deploy:deploy infra/bundle/config.deploy ${BUNDLE_PATH}/config
COPY --chown=deploy:deploy Gemfile* /app/
RUN bundle install && \
    rm -rf ~/.bundle/ ${BUNDLE_PATH}/ruby/*/cache ${BUNDLE_PATH}/ruby/*/bundler/gems/*/.git<% if uses_bootsnap? %> && \
    bundle exec bootsnap precompile --gemfile<% end %>

FROM base AS deploy
ARG RAILS_ENV=production
COPY --chown=deploy:deploy --from=deploy-base ${BUNDLE_PATH} ${BUNDLE_PATH}<% if uses_bootsnap? %>
COPY --chown=deploy:deploy --from=deploy-base /app/tmp/cache/bootsnap /app/tmp/cache/bootsnap<% end %><% if uses_node? %>
COPY --chown=deploy:deploy --from=builder /usr/local/bin/node /usr/local/bin/node<% end %>
COPY --chown=deploy:deploy . /app
RUN --mount=type=secret,id=app-secrets,target=.env \
  bundle exec rails assets:precompile<% if uses_bootsnap? %>
RUN bundle exec bootsnap precompile --gemfile app/ lib/ \
  && chown -R deploy:deploy /app/tmp
<% end %>
USER deploy
ENV RAILS_LOG_TO_STDOUT=true

EXPOSE 3000
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
